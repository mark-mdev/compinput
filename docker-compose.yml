services:
  nginx:
    mem_limit: 128m
    hostname: nginx
    restart: always
    build:
      context: ./nginx
      dockerfile: Dockerfile.dev
    ports:
      - "80:80"
  lemma:
    hostname: lemma
    mem_limit: 256m
    image: "markmdev/python_lemmas"
  backend:
    hostname: backend
    mem_limit: 512m
    build:
      context: ./apps/backend
      dockerfile: Dockerfile.dev
    image: markmdev/compinput-backend
    command: npm run dev
    environment:
      - SUPABASE_URL=$SUPABASE_URL
      - SUPABASE_SERVICE_API_KEY=$SUPABASE_SERVICE_API_KEY
      - PORT=$PORT
      - OPENAI_API_KEY=$OPENAI_API_KEY
      - JWT_SECRET=$JWT_SECRET
      - LEMMA_SERVICE_URL=$LEMMA_SERVICE_URL
      - FRONTEND_URL=$FRONTEND_URL
      - REDIS_URL=$REDIS_URL
      - REDIS_PASSWORD=$REDIS_PASSWORD
      - REDIS_STRING=$REDIS_STRING
      - DATABASE_URL=$DATABASE_URL
  worker:
    hostname: worker
    mem_limit: 384m
    build:
      context: ./apps/backend
      dockerfile: Dockerfile.dev
    command: npm run worker
    environment:
      - SUPABASE_URL=$SUPABASE_URL
      - SUPABASE_SERVICE_API_KEY=$SUPABASE_SERVICE_API_KEY
      - PORT=$PORT
      - OPENAI_API_KEY=$OPENAI_API_KEY
      - JWT_SECRET=$JWT_SECRET
      - LEMMA_SERVICE_URL=$LEMMA_SERVICE_URL
      - FRONTEND_URL=$FRONTEND_URL
      - REDIS_URL=$REDIS_URL
      - REDIS_PASSWORD=$REDIS_PASSWORD
      - REDIS_STRING=$REDIS_STRING
      - DATABASE_URL=$DATABASE_URL
  frontend:
    hostname: frontend
    mem_limit: 256m
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile.dev
    environment:
      - NEXT_PUBLIC_BACKEND_URL=$NEXT_PUBLIC_BACKEND_URL
      - NEXT_PUBLIC_AUDIO_BUCKET_URL=$NEXT_PUBLIC_AUDIO_BUCKET_URL
