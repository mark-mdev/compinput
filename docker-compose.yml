services:
  lemma:
    hostname: lemma
    mem_limit: 768m
    image: "markmdev/lingput-lemma"
    restart: unless-stopped
  backend:
    hostname: backend
    mem_limit: 768m
    image: "markmdev/lingput-backend"
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - APP_PORT=4000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/healthz"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 20s
    restart: unless-stopped
  worker:
    hostname: worker
    mem_limit: 768m
    image: "markmdev/lingput-worker"
    command: npm run worker
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_API_KEY=${SUPABASE_SERVICE_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - APP_PORT=4000
      - LEMMA_SERVICE_URL=http://lemma:8000
    depends_on:
      lemma:
        condition: service_started
    restart: unless-stopped
  frontend:
    hostname: frontend
    mem_limit: 1024m
    image: "markmdev/lingput-frontend"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/healthz"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 15s
    restart: unless-stopped
  nginx:
    mem_limit: 128m
    hostname: nginx
    image: "markmdev/lingput-nginx"
    ports:
      - "80:80"
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    restart: unless-stopped
