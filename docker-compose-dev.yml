services:
  redis:
    image: "redis:latest"
    ports:
      - "6379:6379"
  postgres:
    image: "postgres:latest"
    environment:
      - POSTGRES_DB=lingput
      - POSTGRES_USER=lingput
      - POSTGRES_PASSWORD=cmpinputpswd
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
  lemma:
    build:
      context: ./apps/lemmas
  backend:
    init: true
    build:
      context: ./apps/backend
      dockerfile: Dockerfile.dev
    image: markmdev/lingput-backend
    env_file:
      - ./apps/backend/.env
    volumes:
      - /app/node_modules
      - ./apps/backend:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DATABASE_URL=postgresql://lingput:cmpinputpswd@postgres:5432/lingput?schema=public
      - APP_PORT=4000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
  worker:
    init: true
    image: "markmdev/lingput-backend"
    command: sh "./worker-start-dev.sh"
    env_file:
      - ./apps/backend/.env
    volumes:
      - /app/node_modules
      - ./apps/backend:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DATABASE_URL=postgresql://lingput:cmpinputpswd@postgres:5432/lingput?schema=public
      - LEMMA_SERVICE_URL=http://lemma:8000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      lemma:
        condition: service_started
  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile.dev
    env_file:
      - ./apps/frontend/.env
    volumes:
      - /app/node_modules
      - ./apps/frontend:/app
    depends_on:
      - backend
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:4000
  nginx:
    restart: unless-stopped
    build:
      context: ./nginx
      dockerfile: Dockerfile.dev
    ports:
      - "3050:80"
    depends_on:
      - frontend
      - backend
  prisma-studio:
    image: node:lts-alpine3.17
    working_dir: /usr/src/app
    volumes:
      - .:/usr/src/app
    command: npx prisma studio --port 5555 --browser none --schema ./apps/backend/prisma/schema.prisma
    environment:
      - DATABASE_URL=postgresql://lingput:cmpinputpswd@postgres:5432/lingput?schema=public
    ports:
      - "5555:5555"
    depends_on:
      postgres:
        condition: service_healthy
  landing:
    build:
      context: ./apps/landing
      dockerfile: Dockerfile.dev
    volumes:
      - /app/node_modules
      - ./apps/landing:/app

volumes:
  pgdata:
